
if (MSVC)
	string(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
	string(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
	string(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
endif()

if(CMAKE_SYSTEM_NAME STREQUAL Android)
	set(LIB_SUFFIX_DEBUG "android.${ANDROID_ABI}")
	set(LIB_SUFFIX_RELEASE "android.opt.${ANDROID_ABI}")
elseif(CMAKE_SYSTEM_NAME STREQUAL Emscripten)
	set(LIB_SUFFIX_DEBUG "javascript")
	set(LIB_SUFFIX_RELEASE "javascript.opt")
else()
	if(WIN32)
		set(LIB_SUFFIX_DEBUG "windows")
		set(LIB_SUFFIX_RELEASE "windows.opt")
	elseif(UNIX OR CMAKE_SYSTEM_NAME STREQUAL "Linux")
		set(LIB_SUFFIX_DEBUG "x11")
		set(LIB_SUFFIX_RELEASE "x11.opt")
	endif()

	if (CMAKE_SIZEOF_VOID_P EQUAL 8)
		set(LIB_SUFFIX_DEBUG "${LIB_SUFFIX_DEBUG}.64")
		set(LIB_SUFFIX_RELEASE "${LIB_SUFFIX_RELEASE}.64")
	else()
		set(LIB_SUFFIX_DEBUG "${LIB_SUFFIX_DEBUG}.32")
		set(LIB_SUFFIX_RELEASE "${LIB_SUFFIX_RELEASE}.32")
	endif()
endif()

if(MINGW)
	set(LIB_PREFIX "lib")
	set(LIB_SUFFIX ".a")
else()
	if(WIN32)
		set(LIB_PREFIX "")
	else()
		set(LIB_PREFIX "lib")
	endif()
	set(LIB_SUFFIX "${CMAKE_STATIC_LIBRARY_SUFFIX}")
endif()

set(SRC ${CMAKE_CURRENT_LIST_DIR})
set(INC ${PROJECT_SOURCE_DIR}/godot-cpp-cmake/godot-cpp)

add_library(godotcpp STATIC IMPORTED)
if("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
	set_target_properties(godotcpp PROPERTIES IMPORTED_LOCATION "${PROJECT_SOURCE_DIR}/godot-cpp-cmake/lib/${LIB_PREFIX}godot-cpp.${LIB_SUFFIX_RELEASE}${LIB_SUFFIX}")
else()
	set_target_properties(godotcpp PROPERTIES IMPORTED_LOCATION "${PROJECT_SOURCE_DIR}/godot-cpp-cmake/lib/${LIB_PREFIX}godot-cpp.${LIB_SUFFIX_DEBUG}${LIB_SUFFIX}")
endif()

set(LIBS )
list(APPEND LIBS $<TARGET_FILE:godotcpp>)

include_directories(${SRC} ${INC}/godot_headers ${INC}/include ${INC}/include/core ${INC}/include/gen ${INC}/godot-headers)

set(SRCS )
list(APPEND SRCS ${SRC}/gdexample.cpp)
list(APPEND SRCS ${SRC}/gdlibrary.cpp)

set(INCS )
list(APPEND INCS ${SRC}/gdexample.h)

add_library(gdexample SHARED ${SRCS})
add_dependencies(gdexample godotcpp)
target_link_libraries(gdexample ${LIBS})
target_compile_features(gdexample PUBLIC cxx_std_14)
